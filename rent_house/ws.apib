FORMAT: 1A

# RentHouse

# Group RentHouse

Documentación de los servicios web del sistema.

# Auth [/]

Grupo relacionado con la utenticación e identificación de usuarios en el sistema.

## Not Found [GET /*]

Servicio que se lanza en todo momento que se quiere acceder a un recurso que no existe.

+ Response 404 (application/json)

        {
            "status": "Not Found",
            "data": []
        }

## Login [POST /login]

Servicio con el cual se identifica a un usuario frente al sistema.
Los mensajes en el Response 409 pueden variar según las condiciones de la petición.

- La primer Respuesta 200 es para un login de tipo rol propietario, inquilino o trabajador.
- La segunda Respuesta 200 es par aun login de tipo rol representante legal lo que quiere decir una inmobiliaria.

+ Request (application/json)

    + Body

            {
                "email": "cristian@gyffu.com",
                "password" : "password1234",
                "role": 0,
                "type": "1"
            }

    + Schema
            
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "required" : [
                "email",
                "password",
                "role"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Correo del usuario"
                },
                "password": {
                  "type": "string",
                  "description": "Contraseña del usuario"
                },
                "role": {
                    "type": "integer/string",
                    "description": "tipo del rol con el que se desea auntenticar",
                    "values": [
                        0: "Inidica rol propietario",
                        1: "Inidica rol inquilino",
                        2: "Inidica rol trabajador",
                        3: "Inidica rol de representante legal de una inmobiliaria"
                    ]
                },
                "type": {
                  "type": "integer/string",
                  "values": [
                    0: "Login desde sitios web",
                    1: "Login desde sitios App móvil"
                  ],
                  "description": "Tipo de login 0 para login desde web, 1 para login desde móvil, valor por defecto 0"
                },
              }
            }                        

+ Response 200 (application/json)

        {
            "status": "Login",
            "data": {
                "user": {
                    "id": "1",
                    "email": "cristian@gyffu.com",
                    "identifier": "1096038301",
                    "name": "Cristian",
                    "last_name": "Zapata",
                    "phone": "3217837066",
                    "date_birth": "1995-06-30",
                    "role": "1"
                },
                "token": "VK77ADl2P9RM9uW/it5BTgqkuHhS+ot1hU6Jsix19lyvGadrrQjcKgbC1KGHJWs6MVhrQb4QUWsv0g=="
            }
        }

+ Response 200 (application/json)

        {
            "status": "Login",
            "data": {
                "real_estate": {
                    "id": "1",
                    "nit": "10987458-1",
                    "business_name": "Empresa Pruebas",
                    "legal_representative": {
                        "id": "2",
                        "email": "empresa@empresa.com",
                        "identifier": "14785471025",
                        "name": "Juan",
                        "last_name": "Perez",
                        "phone": "3214587410",
                        "date_birth": "1990-06-30 00:00:00",
                        "role": "3"
                    }
                },
                "token": "NwxReiD4ZVvdGgK6C5SZwDECN/oAz5Rf4bN4/HNIKvRPRittDY7GQFCdt9LSgadv1HRt06aQoznWvxVGXqPt"
            }
        }

+ Response 409 (application/json)

        {
            "status": "Not login",
            "messages": [
                {
                    "message": "Correo/Contraseña/Rol incorrectos",
                    "field": "login",
                    "type": "identifier"
                },
                {
                    "message": "El campo email es obligatorio",
                    "field": "email",
                    "type": "missing"
                },
                {
                    "message": "El campo password es obligatorio",
                    "field": "password",
                    "type": "missing"
                },
                {
                    "message": "El campo role es obligatorio",
                    "field": "role",
                    "type": "missing"
                }
            ]
        }

## Registro Usuario [POST /register]

Servicio para realizar el registro de un usuario en el sistema quien puede ser una persona natural o inmobiliaria.
Los mensajes en el Response 409 pueden variar según las condiciones de la petición.

- El primer Request y Response corresponde a un registro de un usuario natural. Es decir Rol 0 y 1.
- El segundo Request y Response correspondea a u registro de una inmobiliaria. Es decir Rol 3.

+ Request (application/json)

    + Body

            {
                "name": "Camilo",
                "last_name" : "Aguiire",
                "identifier": "789",
                "phone": "57484",
                "date_birth": "2010-02-20",
                "email": "aguirre@correo.com",
                "password": "12314567890",
                "confirm": "12314567890",
                "role": "1"
            }

    + Schema
            
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "required" : [
                "name",
                "lastName",
                "identifier",
                "phone",
                "dateBirth",
                "email",
                "password",
                "confirm",
                "role"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nombre del usuario"
                },
                "last_name": {
                  "type": "string",
                  "description": "Apellidos del usuario"
                },
                "identifier": {
                  "type": "string",
                  "description": "identificación del usuario"
                },
                "phone": {
                  "type": "string",
                  "description": "Celular del usuario"
                },
                "date_birth": {
                  "type": "string",
                  "description": "Fecha de nacimiento del usuario",
                  "format": "YYYY-MM-DD"
                },
                "email": {
                  "type": "string",
                  "description": "Correo del usuario"
                },
                "password": {
                  "type": "string",
                  "description": "Contraseña del usuario",
                  "minLength": 10
                },
                "confirm": {
                  "type": "string",
                  "description": "confirmación y/o retepitición de la contraseña"
                },
                "role": {
                  "type": "integer/string",
                  "description": "tipo de rol del usuario",
                  "values": [
                    0: "propietario",
                    1: "inquilino"
                  ]
                }
              }
            }

+ Response 200 (application/json)

        {
            "status": "Ok",
            "data": {
                "user": {
                    "id": "8",
                    "email": "aguirre@correo.com",
                    "identifier": "789",
                    "name": "Camilo",
                    "last_name": "Aguiire",
                    "phone": "57484",
                    "date_birth": "2010-02-20",
                    "role": "1"
                }
            }
        }

+ Request (application/json)

    + Body

            {
                "name": "Carolina",
                "last_name" : "Tabares",
                "identifier": "12222",
                "phone": "3334555",
                "date_birth": "2010-02-20",
                "email": "correo@correo.com",
                "password": "12314567890",
                "confirm": "12314567890",
                "role": "3",
                "nit" : "1478521-1",
                "business_name": "My company"
            }

    + Schema
            
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "required" : [
                "name",
                "lastName",
                "identifier",
                "phone",
                "dateBirth",
                "email",
                "password",
                "confirm",
                "role"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nombre del usuario"
                },
                "last_name": {
                  "type": "string",
                  "description": "Apellidos del usuario"
                },
                "identifier": {
                  "type": "string",
                  "description": "identificación del usuario"
                },
                "phone": {
                  "type": "string",
                  "description": "Celular del usuario"
                },
                "date_birth": {
                  "type": "string",
                  "description": "Fecha de nacimiento del usuario",
                  "format": "YYYY-MM-DD"
                },
                "email": {
                  "type": "string",
                  "description": "Correo del usuario"
                },
                "password": {
                  "type": "string",
                  "description": "Contraseña del usuario",
                  "minLength": 10
                },
                "confirm": {
                  "type": "string",
                  "description": "confirmación y/o retepitición de la contraseña"
                },
                "role": {
                  "type": "integer/string",
                  "description": "tipo de rol del usuario",
                  "values": [
                    3: "Representante legal"
                  ]
                },
                "nit": {
                  "type": "string",
                  "description": "identificación de la empresa"
                },
                "business_name": {
                  "type": "string",
                  "description": "razón social de la empresa"
                },
              }
            }

+ Response 200 (application/json)

        {
            "status": "Ok",
            "data": {
                "real_estate": {
                    "id": "3",
                    "nit": "14782521-1",
                    "business_name": "My company",
                    "legal_representative": {
                        "id": "10",
                        "email": "correo@correo.com",
                        "identifier": "12222",
                        "name": "Carolina",
                        "last_name": "Tabares",
                        "phone": "3334555",
                        "date_birth": "2010-02-20",
                        "role": "3"
                    }
                }
            }
        }

+ Response 409 (application/json)

        {
            "status": "Not register",
            "messages": [
                {
                    "message": "El correo ingresado ya está en uso",
                    "field": "email",
                    "type": "Uniqueness"
                },
                {
                    "message": "El número de télefono ingresado ya está en uso",
                    "field": "phone",
                    "type": "Uniqueness"
                },
                {
                    "message": "El número de identificación ingresado ya está en uso",
                    "field": "identifier",
                    "type": "Uniqueness"
                },
                {
                    "message": "El contraseña y su confirmación no coinciden",
                    "field": "password",
                    "type": "unequal"
                },
                {
                    "message": "El formato de la fecha de nacimiento es inválida. (YYY-MM-DD)",
                    "field": "dateBirth",
                    "type": "format"
                },
                {
                    "message": "El campo name es obligatorio",
                    "field": "name",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo lastName es obligatorio",
                    "field": "lastName",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo identifier es obligatorio",
                    "field": "identifier",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo phone es obligatorio",
                    "field": "phone",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo dateBirth es obligatorio",
                    "field": "dateBirth",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo email es obligatorio",
                    "field": "email",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo password es obligatorio",
                    "field": "password",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo confirm es obligatorio",
                    "field": "confirm",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo role es obligatorio",
                    "field": "role",
                    "type": "PresenceOf"
                },
                {
                    "message": "El nit ingresado ya está en uso",
                    "field": "nit",
                    "type": "Uniqueness"
                }
            ]
        }

# Property [/property]

Grupo relacionado con la gestiona de las propiedades del sistema, los usuarios que pueden gestionar
las propiedades crear, editar, eliminar son aquellos que estan identificados como propietario y/o representante legal.

## Obtener Propiedad [GET /property/{id}]

Servicio para obtener una propiedad del sistema siempre y cuando esta esté relacionada con el usuario de rol propietario o inmobiliaria (representante legal).

- En caso de querer consumir el servicio con un usuario de rol diferente a los mencionados el recurso no estará disponible y retorna el servicio
*Not Found*

+ Parameters
    + id (number) - Identificador de la propiedad.

+ Request

    + Headers

            Authorization: token obtenido del recurso 'Login'

+ Response 200 (application/json)

        {
            "status": "Ok",
            "data": {
                "property": {
                    "id": "1",
                    "type": "2",
                    "location": "A l45445454a vuelta de la esquina.",
                    "latitude": null,
                    "longitute": null,
                    "extention": "0",
                    "rooms": "2",
                    "bathrooms": "2",
                    "kitchen": "1",
                    "garage": "0",
                    "description": "asadadadad",
                    "cost_month": "0",
                    "deposit": "0",
                    "status": "3",
                    "user_id": "1",
                    "real_estate_id": "1",
                    "city_id": "1"
                }
            }
        }

+ Response 404 (application/json)

        {
            "status": "Not found property",
            "data": []
        }

## Listar Propiedades [GET /property/list/{status}{?limit,page}]

Serivicio para obtener las propiedades todas la propiedades relacionadas con un usario de rol propietario o inmobiliaria (representante legal).

- En caso de querer consumir el servicio con un usuario de rol diferente a los mencionados el recurso no estará disponible y retorna el servicio
*Not Found*

+ Parameters
    + status (enum[string]) - Este sirve como filtro a la hora de listar para obtener las propiedades en un estato en concreto
        + status
            + all: No tiene encuente el estado
            + 0: Disponible
            + 1: No Disponible
            + 2: Ocupada
            + 3: Eliminada

    + limit (number, optional) - Cantidad máxima de registro que trae en la lista.
        + Default: `20`

    + page (number, optional) - Página de la que se obtienen los resgistros.
        + Default: `1`

+ Request

    + Headers

            Authorization: token obtenido del recurso 'Login'

+ Response 200 (application/json)

        {
            "status": "Ok",
            "data": {
                "first": 1,
                "before": 1,
                "current": 1,
                "last": 1,
                "next": 1,
                "total_pages": 1,
                "total_items": 1,
                "limit": 20,
                "properties": [
                    {
                        "id": "1",
                        "type": "2",
                        "location": "A l45445454a vuelta de la esquina.",
                        "latitude": null,
                        "longitute": null,
                        "extention": "0",
                        "rooms": "2",
                        "bathrooms": "2",
                        "kitchen": "1",
                        "garage": "0",
                        "description": "asadadadad",
                        "cost_month": "0",
                        "deposit": "0",
                        "status": "3",
                        "user_id": "1",
                        "real_estate_id": "1",
                        "city_id": "1"
                    }
                ]
            }
        }

+ Response 404 (application/json)

        {
            "status": "Not Found",
            "data": []
        }

## Crear Propiedad [POST /property]

Servicio para crear una nueva propieda en el sistema, la acción puede ser llevada acabo por un usuario de tipo
rol Propietario (0) o inmobiliaria (Representate legal (3)).

- En caso de querer consumir el servicio con un usuario de rol diferente a los mencionados el recurso no estará disponible y retorna el servicio
*Not Found*

- Cuando el registro es elaborado por una inmobiliaria en el *Body* de la solicitud se debe enviar el *user_id* el cual indicará
el propietario del inmueble; En caso de que el registro de lleve acabo desde un perfil propitario este parámetro no se tiene en cuenta.

+ Request

    + Headers

            Authorization: token obtenido del recurso 'Login'
    
    + Body

            {
                "type": 1,
                "location": "Avenida siempreviva 742",
                "description": "Casa de dos pisos color amarillo",
                "city_id": "1",
                "latitude": 72.5,
                "longitude": -78.5,
                "extention": 100,
                "rooms": 2,
                "bathrooms": 2,
                "kitchen": 1,
                "garage": 1,
                "cost_month": 500000,
                "deposit": 100000,
                "user_id": "1"
            }

    + Schema

            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "required" : [
                "type",
                "location",
                "description",
                "city_id",
                "user_id": "si el registro lo realiza una inmobiliaria"
              ],
              "optional": [
                "latitude",
                "longitude",
                "extention",
                "rooms",
                "bathrooms",
                "kitchen",
                "garage",
                "cost_month",
                "deposit"
              ],
              "properties": {
                "type": {
                  "type": "integer/string",
                  "description": "Referencia al tipo de prp}opiedad, actualmente se cuenta con los siguientes datos.",
                  "values": [
                    1: "Apartamento",
                    2: "Casa",
                    3: "Aparta-Estudio"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "Dirección textual en la que esta la propiedad"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción de la propiedad"
                },
                "city_id": {
                  "type": "integer",
                  "description": "Referencia de la ciudad en la que se encuentra ubicada la propiedad"
                },
                "latitude": {
                  "type": "double",
                  "description": "Punto latitud en la que la propiedad se encuentra ubicada",
                  "default": NULL
                },
                "longitude": {
                  "type": "double",
                  "description": "Punto longitud en la que la propiedad se encuentra ubicada",
                  "default": NULL
                },
                "extention": {
                  "type": "string",
                  "description": "Dimensión de la propiedad",
                  "default": 0
                },
                "rooms": {
                  "type": "integer",
                  "description": "Cantidad de cuarto que contiene la propiedad",
                  "default": 0
                },
                "bathrooms": {
                  "type": "integer",
                  "description": "Cantidad de baños que contiene la propiedad",
                  "default": 0
                },
                "kitchen": {
                  "type": "integer",
                  "description": "Cantidad de cocinas que contiene la propiedad",
                  "default": 0
                },
                "garage": {
                  "type": "integer",
                  "description": "Cantidad de garajes que contiene la propiedad",
                  "default": 0
                },
                "cost_month": {
                  "type": "integer",
                  "description": "Costo mensual de la propiedad",
                  "default": 0
                },
                "deposit": {
                  "type": "integer",
                  "description": "Valor de deposito que requiere la propiedad",
                  "default": 0
                },
                "user_id": {
                  "type": "integer",
                  "description": "Referncia al usuario propietario de la propiedad."
                },
              }
            }

+ Response 200 (application/json)

            {
                "status": "Ok",
                "data": {
                    "property": {
                        "id": "2",
                        "type": "1",
                        "location": "Avenida siempreviva 742",
                        "latitude": 72.5,
                        "longitude": -78.5,
                        "extention": 100,
                        "rooms": 2,
                        "bathrooms": 2,
                        "kitchen": 1,
                        "garage": 1,
                        "description": "Casa de dos pisos color amarillo",
                        "cost_month": 500000,
                        "deposit": 100000,
                        "status": 0,
                        "user_id": "1",
                        "real_estate_id": "1",
                        "city_id": "1"
                    }
                }
            }

+ Response 409 (application/json)

        {
            "status": "Not created",
            "messages": [
                {
                    "message": "El usuario propietario indicado no existe",
                    "field": "user_id",
                    "type": "Type property"
                },
                {
                    "message": "El tipo de propiedad indicado no existe",
                    "field": "type",
                    "type": "Type property"
                },
                {
                    "message": "La ciudad indicada no existe",
                    "field": "city_id",
                    "type": "City"
                },
                {
                    "message": "El campo type es obligatorio",
                    "field": "type",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo location es obligatorio",
                    "field": "location",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo description es obligatorio",
                    "field": "description",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo user_id es obligatorio",
                    "field": "user_id",
                    "type": "PresenceOf"
                },
                {
                    "message": "El campo city_id es obligatorio",
                    "field": "city_id",
                    "type": "PresenceOf"
                }
            ]
        }

+ Response 404 (application/json)

        {
            "status": "Not Found",
            "data": []
        }

## Editar Propiedad [PUT /property]

Servicio para editar una nueva propieda en el sistema, la acción puede ser llevada acabo por un usuario de tipo
rol Propietario (0) o inmobiliaria (Representate legal (3)).

- En caso de querer consumir el servicio con un usuario de rol diferente a los mencionados el recurso no estará disponible y retorna el servicio
*Not Found*

- Cuando la edición es elaborada por una inmobiliaria y se desea cambiar el propietario en el *Body* de la solicitud se debe enviar el *user_id* 
el cual indicará el propietario del inmueble.

+ Request

    + Headers

            Authorization: token obtenido del recurso 'Login'
    
    + Body

            {
                "type": 1,
                "location": "Avenida siempreviva 742",
                "description": "Casa de dos pisos color amarillo",
                "city_id": "1",
                "latitude": 72.5,
                "longitude": -78.5,
                "extention": 100,
                "rooms": 2,
                "bathrooms": 2,
                "kitchen": 1,
                "garage": 1,
                "cost_month": 500000,
                "deposit": 100000,
                "user_id": "1"
            }

    + Schema

            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "type": "object",
              "required" : [
                "id"
              ],
              "optional": [
                "type",
                "location",
                "description",
                "city_id",
                "latitude",
                "longitude",
                "extention",
                "rooms",
                "bathrooms",
                "kitchen",
                "garage",
                "cost_month",
                "deposit",
                "user_id",
              ],
              "properties": {
                "type": {
                  "type": "integer/string",
                  "description": "Referencia al tipo de prp}opiedad, actualmente se cuenta con los siguientes datos.",
                  "values": [
                    1: "Apartamento",
                    2: "Casa",
                    3: "Aparta-Estudio"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "Dirección textual en la que esta la propiedad"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción de la propiedad"
                },
                "city_id": {
                  "type": "integer",
                  "description": "Referencia de la ciudad en la que se encuentra ubicada la propiedad"
                },
                "latitude": {
                  "type": "double",
                  "description": "Punto latitud en la que la propiedad se encuentra ubicada"
                },
                "longitude": {
                  "type": "double",
                  "description": "Punto longitud en la que la propiedad se encuentra ubicada"
                },
                "extention": {
                  "type": "string",
                  "description": "Dimensión de la propiedad"
                },
                "rooms": {
                  "type": "integer",
                  "description": "Cantidad de cuarto que contiene la propiedad"
                },
                "bathrooms": {
                  "type": "integer",
                  "description": "Cantidad de baños que contiene la propiedad"
                },
                "kitchen": {
                  "type": "integer",
                  "description": "Cantidad de cocinas que contiene la propiedad"
                },
                "garage": {
                  "type": "integer",
                  "description": "Cantidad de garajes que contiene la propiedad"
                },
                "cost_month": {
                  "type": "integer",
                  "description": "Costo mensual de la propiedad"
                },
                "deposit": {
                  "type": "integer",
                  "description": "Valor de deposito que requiere la propiedad"
                },
                "user_id": {
                  "type": "integer",
                  "description": "Referncia al usuario propietario de la propiedad."
                },
              }
            }

+ Response 200 (application/json)

            {
                "status": "Ok",
                "data": {
                    "property": {
                        "id": "2",
                        "type": "1",
                        "location": "Avenida siempreviva 742",
                        "latitude": 72.5,
                        "longitude": -78.5,
                        "extention": 100,
                        "rooms": 2,
                        "bathrooms": 2,
                        "kitchen": 1,
                        "garage": 1,
                        "description": "Casa de dos pisos color amarillo",
                        "cost_month": 500000,
                        "deposit": 100000,
                        "status": 0,
                        "user_id": "1",
                        "real_estate_id": "1",
                        "city_id": "1"
                    }
                }
            }

+ Response 409 (application/json)

        {
            "status": "Not created",
            "messages": [
                {
                    "message": "La propiedad indicado no existe",
                    "field": "type",
                    "type": "Property"
                },
                {
                    "message": "El usuario propietario indicado no existe",
                    "field": "user_id",
                    "type": "Type property"
                },
                {
                    "message": "El tipo de propiedad indicado no existe",
                    "field": "type",
                    "type": "Type property"
                },
                {
                    "message": "La ciudad indicada no existe",
                    "field": "city_id",
                    "type": "City"
                },
                {
                    "message": "El campo id es obligatorio",
                    "field": "type",
                    "type": "PresenceOf"
                }
            ]
        }

+ Response 404 (application/json)

        {
            "status": "Not Found",
            "data": []
        }

## Eliminar Propiedad [DELETE /property/{id}]

Servicio para eliminar una propiedad del sistema, este eliminación se realiza de forma lógica con el fin de respectar procesos de negocio,
la eliminación se lleva acabo siempre y cuando el usuario sea de tipo *propietario* o *inmobiliaria* y tenga relación con dicha propiedad.

+ Parameters
    + id (number) - Identificador de la propiedad.

+ Request

    + Headers

            Authorization: token obtenido del recurso 'Login'

+ Response 200 (application/json)

        {
            "status": "Ok",
            "data": []
        }

+ Response 409 (application/json)

        {
            "status": "Not deleted",
            "messages": [
                {
                    "message": "La propiedad indicado no existe",
                    "field": "type",
                    "type": "Property"
                },
                {
                    "message": "El campo id es obligatorio",
                    "field": "type",
                    "type": "PresenceOf"
                }
            ]
        }

+ Response 404 (application/json)

        {
            "status": "Not Found",
            "data": []
        }